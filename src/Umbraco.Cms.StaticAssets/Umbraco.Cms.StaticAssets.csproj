<Project Sdk="Microsoft.NET.Sdk.Razor">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <AddRazorSupportForMvc>true</AddRazorSupportForMvc>
    <PackageId>Umbraco.Cms.StaticAssets</PackageId>
    <Description>Contains the static assets that are required to run Umbraco CMS.</Description>
    <StaticWebAssetBasePath>/</StaticWebAssetBasePath>
  </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Umbraco.Web.BackOffice\Umbraco.Web.BackOffice.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\Umbraco.Web.Website\Umbraco.Web.Website.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <None Include="buildTransitive\**">
      <Pack>true</Pack>
      <PackagePath>buildTransitive</PackagePath>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <BellePath>$(ProjectDir)wwwroot\umbraco</BellePath>
  </PropertyGroup>

  <Target Name="ConditionalBelleBuild" BeforeTargets="Build">
    <!-- Build Belle (when building) if not running manual/CI build and the build folder does not exist yet -->
    <Message Text="Conditional BelleBuild using BellePath: $(BellePath)" Importance="high" />
    <Message Text="Skip BelleBuild, because UmbracoBuild is '$(UmbracoBuild)' (manual/CI build)" Importance="High" Condition="'$(UmbracoBuild)' != ''" />
    <Message Text="Skip BelleBuild, because BellePath already exists" Importance="High" Condition="Exists('$(BellePath)')" />
    <Message Text="Invoke BelleBuild, because UmbracoBuild is empty (not a manual/CI build) and BellePath does not exist" Importance="High" Condition="'$(UmbracoBuild)' == '' and !Exists('$(BellePath)')" />
    <CallTarget Targets="BelleBuild" Condition="'$(UmbracoBuild)' == '' and !Exists('$(BellePath)')" />
  </Target>

  <Target Name="BelleBuild">
    <Exec WorkingDirectory="$(ProjectDir)\..\Umbraco.Web.UI.Client\" Command="npm ci --no-fund --no-audit --prefer-offline" />
    <Exec WorkingDirectory="$(ProjectDir)\..\Umbraco.Web.UI.Client\" Command="npm run build:skip-tests" />
  </Target>

  <Target Name="ConditionalBelleClean" AfterTargets="Clean">
    <!-- Clean Belle (when cleaning and rebuilding) if not running manual/CI build, the build folder exists, but preserve.belle does not exist -->
    <Message Text="Conditional BelleClean using BellePath: $(BellePath)" Importance="high" />
    <Message Text="Skip BelleClean, because UmbracoBuild is '$(UmbracoBuild)' (running manual/CI build)" Importance="High" Condition="'$(UmbracoBuild)' != ''" />
    <Message Text="Skip BelleClean, because BellePath does not exist" Importance="High" Condition="!Exists('$(BellePath)')" />
    <Message Text="Skip BelleClean, because preserve.belle exists" Importance="High" Condition="Exists('$(SolutionDir)preserve.belle')" />
    <Message Text="Invoke BelleClean, because UmbracoBuild is empty (not a manual/CI build), BellePath exists, but preserve.belle does not exist" Importance="High" Condition="'$(UmbracoBuild)' == '' and Exists('$(BellePath)') and !Exists('$(SolutionDir)preserve.belle')" />
    <CallTarget Targets="BelleClean" Condition="'$(UmbracoBuild)' == '' and Exists('$(BellePath)') and !Exists('$(SolutionDir)preserve.belle')" />
  </Target>

  <Target Name="BelleClean">
    <RemoveDir Directories="$(BellePath)" />
  </Target>

  <!--
    The set of files to publish is generated really early and doesn't currently account for files added by targets e.g. BeforeBuild.
    A fix was put in place in Web SDK to update for wwwwroot in case someone runs npm build etc in a target, we're borrowing their trick.
    https://github.com/dotnet/sdk/blob/e2b2b1a4ac56c955b84d62fe71cda3b6f258b42b/src/WebSdk/Publish/Targets/ComputeTargets/Microsoft.NET.Sdk.Publish.ComputeFiles.targets
   -->
  <Target Name="IncludeUmbracoFolderContent" BeforeTargets="GetCopyToOutputDirectoryItems;GetCopyToPublishDirectoryItems;">
    <ItemGroup>
      <_UmbracoFolderFiles Include="umbraco\config\**" />
      <_UmbracoFolderFiles Include="umbraco\PartialViewMacros\**" />
      <_UmbracoFolderFiles Include="umbraco\UmbracoBackOffice\**" />
      <_UmbracoFolderFiles Include="umbraco\UmbracoInstall\**" />
      <_UmbracoFolderFiles Include="umbraco\UmbracoWebsite\**" />
      <_UmbracoFolderFiles Include="umbraco\UmbracoWebsite\**" />
      <_UmbracoFolderFiles Include="umbraco\Licenses\**" />
      <ContentWithTargetPath Include="@(_UmbracoFolderFiles)" Exclude="@(ContentWithTargetPath)" TargetPath="%(Identity)" CopyToOutputDirectory="PreserveNewest" CopyToPublishDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>
</Project>
